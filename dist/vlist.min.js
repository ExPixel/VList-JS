var VList;
(function (VList_1) {
    var VListData = (function () {
        function VListData() {
        }
        return VListData;
    }());
    var VListBuffer = (function () {
        function VListBuffer(off) {
            if (off === void 0) { off = 0; }
            this.off = off;
            this.renderedElements = 0;
            this.elements = [];
            this.container = document.createElement('div');
            this.container.style.margin = "0";
            this.container.style.padding = "0";
        }
        VListBuffer.prototype.moveTo = function (y) {
            this.y = y;
            this.container.style.transform = "translateY(" + (y - this.off) + "px)";
        };
        VListBuffer.prototype.setRenderLength = function (l) {
            this.renderLength = l;
            if (this.elements.length > l) {
                var idx = l, len = this.elements.length;
                for (idx; idx < len; idx++) {
                    var element = this.elements[idx];
                    if (element) {
                        element.remove();
                    }
                }
                this.elements.splice(l, this.elements.length - l);
                if (this.elementTemplates && this.elementTemplates.length > this.elements.length) {
                    this.elementTemplates.splice(this.elements.length, this.elementTemplates.length - this.elements.length);
                }
            }
        };
        return VListBuffer;
    }());
    var VList = (function () {
        function VList(options) {
            var _this = this;
            this.buffer0 = new VListBuffer();
            this.buffer1 = new VListBuffer();
            this._length = 0;
            this.bufferHeight = 0;
            this.data = new VListData();
            this.elementCreator = document.createElement('div');
            console.log(options);
            if (options.templateRender && !options.template)
                throw Error("A template string must be provided when also providing a template render function.");
            if (options.templateRender && options.render)
                throw Error("A normal render function cannot be passed alongside a template render function.");
            if (options.template && !options.templateRender)
                throw Error("A template render function must be provided when also providing a template string.");
            if (typeof options.container === "string") {
                this.data.container = document.querySelector(options.container);
            }
            else {
                this.data.container = options.container;
            }
            this.data.elementHeight = options.elementHeight;
            this.data.render = options.render;
            this.data.template = options.template;
            this.data.templateRender = options.templateRender;
            this.data.onCreateElement = options.onCreateElement;
            if (this.data.template) {
                this.buffer0.elementTemplates = [];
                this.buffer1.elementTemplates = [];
                this.templateMode = true;
                this.compileTemplate();
            }
            this.buffer0.name = "buf0";
            this.buffer1.name = "buf1";
            this.viewportSizeChanged();
            this.setContainerHeight();
            this.data.container.parentElement.addEventListener('scroll', function () {
                _this.scrollPositionChanged();
            });
            this.data.container.appendChild(this.buffer0.container);
            this.data.container.appendChild(this.buffer1.container);
            this.buffer1.off = this.bufferHeight;
        }
        VList.prototype.setContainerHeight = function () {
            this.data.container.style.height = Math.ceil(this.data.elementHeight * this._length) + "px";
        };
        VList.prototype.viewportSizeChanged = function () {
            var style = window.getComputedStyle(this.data.container.parentElement, null);
            var height = parseInt(style.getPropertyValue('height'));
            var renderLength = Math.ceil(height / this.data.elementHeight) * 2;
            this.buffer0.setRenderLength(renderLength);
            this.buffer1.setRenderLength(renderLength);
            this.bufferHeight = height * 2;
            this.render(true);
        };
        VList.prototype.scrollPositionChanged = function () {
            this.render(false);
        };
        VList.prototype.compileTemplate = function () {
            var _this = this;
            var _createNode = document.createElement('div');
            _createNode.innerHTML = this.data.template;
            if (_createNode.firstElementChild && _createNode.firstElementChild.nextElementSibling) {
                throw Error("Templates must have a single top level element.");
            }
            this.templateBindingInfo = {};
            var process = function (node, parents, current) {
                var attr = node.getAttribute('vlist-name');
                if (attr) {
                    var temp = parents.slice(0);
                    temp.push(current);
                    _this.templateBindingInfo[attr] = temp;
                }
            };
            process(_createNode, [], 0);
            var visit;
            visit = function (node, parents) {
                var siblingIdx = 0;
                do {
                    process(node, parents, siblingIdx);
                    if (node.firstElementChild) {
                        parents.push(siblingIdx);
                        visit(node.firstElementChild, parents);
                        parents.pop();
                    }
                    siblingIdx++;
                    node = node.nextElementSibling;
                } while (node);
            };
            visit(_createNode.firstElementChild, []);
        };
        VList.prototype.inserted = function (startIndex, length) {
            if (length === void 0) { length = 1; }
            var rel = this.indexPositionRelativeToBuffers(startIndex, length);
            this.length += length;
            switch (rel) {
                case 1: break;
                case 0:
                    this.shiftBufferPositions(length * this.data.elementHeight);
                    break;
                default:
                    this.render(true);
                    break;
            }
        };
        VList.prototype.changed = function (startIndex, length) {
            length = Math.min(this.length, length);
            var rel = this.indexPositionRelativeToBuffers(startIndex, length);
            if (rel === 2) {
                this.render(true);
            }
        };
        VList.prototype.removed = function (startIndex, length) {
            if (length === void 0) { length = 1; }
            length = Math.min(this.length, length);
            var rel = this.indexPositionRelativeToBuffers(startIndex, length);
            this.length -= length;
            switch (rel) {
                case 1: break;
                case 0:
                    this.shiftBufferPositions(-1 * length * this.data.elementHeight);
                    break;
                default:
                    this.render(true);
                    break;
            }
        };
        VList.prototype.shiftBufferPositions = function (shiftBy) {
            this.buffer0.moveTo(this.buffer0.y + shiftBy);
            this.buffer1.moveTo(this.buffer1.y + shiftBy);
        };
        VList.prototype.indexPositionRelativeToBuffers = function (index, length) {
            if (length === void 0) { length = index; }
            var end = index + (length - 1);
            var bbegin = Math.min(this.buffer0.renderStartIndex, this.buffer1.renderStartIndex);
            if (end < bbegin) {
                return 0;
            }
            var bend = Math.min(this.buffer0.renderStartIndex + this.buffer0.renderLength, this.buffer1.renderStartIndex) + this.buffer1.renderLength;
            if (index > bend) {
                return 1;
            }
            return 2;
        };
        VList.prototype.render = function (forceRefresh) {
            var pos = this.data.container.parentElement.scrollTop;
            if (pos > this.bufferHeight && (this.length * this.data.elementHeight > this.bufferHeight)) {
                pos = Math.min(pos, this.length * this.data.elementHeight - this.bufferHeight);
            }
            var displayBuffer = Math.floor(pos / this.bufferHeight) % 2;
            var bufferStartPosition = pos - (pos % this.bufferHeight);
            var bufferStartElement = Math.floor(bufferStartPosition / this.data.elementHeight);
            var cb;
            var ob;
            if (displayBuffer == 0) {
                cb = this.buffer0;
                ob = this.buffer1;
            }
            else {
                cb = this.buffer1;
                ob = this.buffer0;
            }
            if (cb.renderStartIndex !== bufferStartElement || forceRefresh) {
                cb.prevRenderStartIndex = cb.renderStartIndex;
                cb.renderStartIndex = bufferStartElement;
                cb.moveTo(bufferStartPosition);
                this.renderBuffer(cb);
            }
            var a;
            if (pos > (bufferStartPosition + this.bufferHeight / 2)) {
                var _s = Math.min(this.length - 1, cb.renderStartIndex + cb.renderLength);
                if (ob.renderStartIndex !== _s || forceRefresh) {
                    ob.prevRenderStartIndex = ob.renderStartIndex;
                    ob.renderStartIndex = _s;
                    ob.moveTo(cb.y + this.bufferHeight);
                    this.renderBuffer(ob);
                }
            }
            else {
                var _s = Math.max(0, cb.renderStartIndex - cb.renderLength);
                if (ob.renderStartIndex !== _s || forceRefresh) {
                    ob.prevRenderStartIndex = ob.renderStartIndex;
                    ob.renderStartIndex = _s;
                    ob.moveTo(cb.y - this.bufferHeight);
                    this.renderBuffer(ob, cb.renderStartIndex);
                }
            }
        };
        VList.prototype.createTemplateElement = function () {
            this.elementCreator.innerHTML = "";
            this.elementCreator.innerHTML = this.data.template;
            var element = this.elementCreator.firstElementChild;
            var templateInfo = {};
            for (var key in this.templateBindingInfo) {
                var searchArr = this.templateBindingInfo[key];
                var node = this.elementCreator;
                for (var curIdx = 0; curIdx < searchArr.length; curIdx++) {
                    node = node.children[searchArr[curIdx]];
                }
                templateInfo[key] = node;
            }
            this.elementCreator.innerHTML = "";
            return {
                element: element,
                templateInfo: templateInfo
            };
        };
        VList.prototype.renderBuffer = function (buffer, renderTo) {
            if (renderTo === void 0) { renderTo = Number.POSITIVE_INFINITY; }
            var r = 0, pidx = buffer.prevRenderStartIndex, idx = buffer.renderStartIndex, length = buffer.renderLength;
            buffer.container.innerHTML = "";
            for (; r < length && idx < this.length && idx < renderTo; r++, idx++, pidx++) {
                if (this.templateMode) {
                    var el = buffer.elements[r];
                    var info = void 0;
                    if (el) {
                        info = buffer.elementTemplates[r];
                    }
                    else {
                        var elInfo = this.createTemplateElement();
                        el = elInfo.element;
                        info = elInfo.templateInfo;
                        info["$root"] = el;
                        buffer.elements[r] = el;
                        buffer.elementTemplates[r] = info;
                        if (this.data.onCreateElement) {
                            this.data.onCreateElement(idx, el);
                        }
                    }
                    this.data.templateRender(idx, info);
                    buffer.container.appendChild(el);
                }
                else {
                    var old = buffer.elements[r];
                    var el = this.data.render(idx, old, pidx);
                    if (old !== el) {
                        this.data.onCreateElement(idx, el);
                    }
                    buffer.container.appendChild(el);
                    buffer.elements[r] = el;
                }
            }
        };
        Object.defineProperty(VList.prototype, "length", {
            get: function () { return this._length; },
            set: function (v) { this._length = v; this.setContainerHeight(); },
            enumerable: true,
            configurable: true
        });
        return VList;
    }());
    function init(options) {
        return new VList(options);
    }
    VList_1.init = init;
})(VList || (VList = {}));
//# sourceMappingURL=data:application/json;base64,